#include <stdio.h>  
#include <stdlib.h>  
  
int main(){
/*--------------------------------------------------4 Проверка наличия в массиве A отрицательных чисел.
int A[]={0,1,2,3,-5};
int n = sizeof(A) / sizeof(A[0]);
int s,i;
for ( s=0,i=0; i<n; i++)
      if (A[i]<0) { s=1; break; }
return s;
*/
//--------------------------------------------------14 Запись всех простых элементов массива A в массив B.
/*
int j,i,m,s;

int A[]={2,3,4,10,8,11,24,7},B[]={};
int n = sizeof(A) / sizeof(A[0]);
for (j=0,i=0; i<n ; i++){
        for (s=0,m=2; m<A[i]; m++)
           if (A[i]%m==0) { s=1; break; }
        if (s==0) B[j++]=A[i];
        }
B[j]=0;
for (j=0;B[j]>0;j++){
    printf("%d ",B[j]);
}
*/
//
/*--------------------------------------------------------24 Запись элементов массива с в обратном порядке.
int i,j,k;
int c[]={1,2,3,4,5,6,7,8,9,10};
int n = sizeof(c) / sizeof(c[0]);
for (i=0,j=n-1; i < j; i++,j--)
      { k = c[i]; c[i] = c[j]; c[j] = k; }
for (j=0;c[j]>0;j++){
    printf("%d ",c[j]);
}
*/
/*--------------------------------------------------------34 Вывод Отсортированного по возрастанию массива A.
 int j, k, i, max;
    int A[] = {11, 7, 5, 24, 128, 10};
    int n = sizeof(A) / sizeof(A[0]);
    int B[n];
    
    for (j=0, max=A[0]; j<n; j++) {
        if (A[j] > max) {
            max = A[j];
        }
    }
    
    for (j=0; j<n; j++) {
        for (k=0, i=1; i<n; i++) {
            if (A[i] < A[k]) {
                k = i;
            }
        }
        B[j] = A[k];
        A[k] = max + 1;
    }
    
    for (j=0; j<n; j++) {
        printf("%d ", B[j]);
    }
*/
/*--------------------------------------------------------44 Вывод количества элементов массива A, больших чем 0.
int i,s;
int A[]={1,2,-3,-4,10,2,4,8,10};
for (i=0,s=0; i<10; i++)
     if (A[i]>0) s++;
printf("%d ", s);
*/
//--------------------------------------------------------54 Вывод Good если в массиве A все элементы неотрицательны.
int i;
int A[]={1,2,5,0,-10};
int n = sizeof(A) / sizeof(A[0]);
for (i=0; i<n; i++)
     if (A[i]<0) break;
if (i==n) puts("Good");
//
}
